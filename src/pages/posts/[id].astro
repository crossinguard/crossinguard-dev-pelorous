---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection, render } from "astro:content";

export async function getStaticPaths() {
    const posts = await getCollection("posts");
    return posts.map((post) => ({
        params: { id: post.id },
        props: { post },
    }));
}
const { post } = Astro.props;
const { Content } = await render(post);

// Date formatting helper
const formatDate = (date: Date) =>
    date.toLocaleDateString("en-US", {
        year: "numeric",
        month: "short",
        day: "numeric",
    });

const pubDate = formatDate(post.data.pubDate);
const updatedDate = post.data.updatedDate
    ? formatDate(post.data.updatedDate)
    : null;
---

<BaseLayout title={post.data.title} description={post.data.description}>
    <article class="flow">
        <h1 class="title">{post.data.title}</h1>
        <p class="description">{post.data.description}</p>
        {
            post.data.tags && post.data.tags.length > 0 && (
                <ul role="list" class="tags cluster">
                    {post.data.tags.map((tag) => (
                        <li class="tag">#{tag}</li>
                    ))}
                </ul>
            )
        }
        <p class="date">
            posted <time datetime={post.data.pubDate.toISOString()}
                >{pubDate}</time
            >
            {
                post.data.updatedDate && (
                    <>
                        {" "}
                        â€¢{" "}
                        <span>
                            updated{" "}
                            <time
                                datetime={post.data.updatedDate.toISOString()}
                            >
                                {updatedDate}
                            </time>
                        </span>
                    </>
                )
            }
        </p>
        <hr />
        <div class="content flow">
            <Content />
        </div>
    </article>
</BaseLayout>

<style>
    .date {
        font-size: var(--step-0);
        opacity: 0.8;
    }

    .tags {
        font-size: var(--step--1);
        opacity: 0.8;
        padding: 0;
        font-family: var(--font-family-mono);
    }

    hr {
        border: none;
        border-block: 2px solid var(--color-primary);
        opacity: 0.3;
    }
</style>
